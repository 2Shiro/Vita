spring.application.name=Vita
# Web page Setting :  Board -> /
server.servlet.context-path=/

# server ì port ë²í¸
server.port = 8080

# jsp ê° ì ì¥ë  í´ëì´ë¦  "/src/main/webapp/WEB-INF/views/" + "home" + ".jsp"
spring.mvc.view.prefix = /WEB-INF/views/
spring.mvc.view.suffix = .jsp

# JSP ìì ì ìë² ì¬ìììì´ ë°ë¡ ì ì©í  ì ìê² ì¤ì 
server.servlet.jsp.init-parameters.development = true

# mapper.xml ê²½ë¡ ì¤ì 
mybatis.mapper-locations:classpath:mapper/**/*Mapper.xml

# datasource ì¤ì 

spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=prj03
spring.datasource.password=1234

## 파일업로드를 위해 추가된 부분
# file upload setting - no need library
spring.servlet.multipart.enabled=true
# 파일 저장 경로
spring.servlet.multipart.location=D:/data/ 
# 업로드 될 파일당 최대 크기
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=1000MB
# properties 변수 
# part4.upload-path=D:/dev/data/
spring.resources.cache.period=0



spring.jwt.secret=1df436269c767aad11b32ef22f26de8b07318d831f6cbb74450f7784f3a6563f

#registration
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=dgxlzgCqBgiPYg7OSei9
spring.security.oauth2.client.registration.naver.client-secret=7oSvdO3DLj
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email

#provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

#registration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=53551471314-97dcf6sffj3ne5h9667t1alttokfvvb2.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email