<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vita.pay.mapper.PayMapper">

	<!-- 장바구니 가져오기 -->
	<select id="getBasketList">
		SELECT	BASKET_ID,
				ID,
				PRO_ID,
				COUNT,
				STATE,
				PRICE,
				DELIVERY_CHARGE
		FROM	BASKET
		WHERE	ID = #{id}
	</select>

	<!-- 장바구니 상품에 대한 정보 가져오기 -->
	<select id="getProd">
		SELECT	PRO_ID,
				NAME,
				MAKE_ID,
				ING_ID,
				URL,
				FORM_ID,
				EXPLAIN,
				CAUTION,
				PRICE
		FROM	PRODUCT
		WHERE	PRO_ID = #{pro_id}
	</select>
	<select id="getImg">
		SELECT	IMG_ID,
				PRO_ID,
				IMG
		FROM	IMGS
		WHERE	PRO_ID = #{pro_id}
			AND	ROWNUM = 1
	</select>
	<select id="getMake">
		SELECT	MAKE_ID,
				NAME,
				TEL,
				ZIPCODE,
				ADDRESS,
				ADDRESSDETAIL
		FROM	MAKE
		WHERE	MAKE_ID = #{make_id}
	</select>

	<!-- 장바구니 특정 상품 정보 가져오기 -->
	<select id="getBasket">
		SELECT	BASKET_ID,
				ID,
				PRO_ID,
				COUNT,
				STATE,
				PRICE,
				DELIVERY_CHARGE
		FROM	BASKET
		WHERE	BASKET_ID = #{basket_id}
	</select>

	<!-- 장바구니 상품 수량 변경 -->
	<update id="updateBasketCount">

		UPDATE	BASKET
		SET		COUNT = #{count}
		WHERE	BASKET_ID = #{basket_id}

	</update>

	<!-- 장바구니 구매 상태 변경 -->
	<update id="updateState">

		UPDATE	BASKET
		SET		STATE = #{state}
		WHERE	BASKET_ID = #{basket_id}

	</update>

	<!-- 구매상태 상품 가져오기 -->
	<select id="getPayList">
		SELECT	BASKET_ID,
				ID,
				PRO_ID,
				COUNT,
				STATE,
				PRICE,
				DELIVERY_CHARGE
		FROM	BASKET
		WHERE	ID = #{id}
			AND	STATE = 1
	</select>

	<!-- 배송지 조회 -->
	<select id="getDeliveryList">
		SELECT	ADDRESS_ID,
				ID,
				NAME,
				RECIPENT,
				TEL,
				ZIPCODE,
				ADDRESS,
				ADDRESSDETAIL,
				REQ,
				DEFUALT
		FROM	DELIVERY
		WHERE	ID = #{id}
		ORDER BY ADDRESS_ID
	</select>
	
	<!-- 다른 배송지의 defualt 값을 0으로 설정 -->
	<update id="resetAddDefaultForOtherAddresses" parameterType="map">
	    UPDATE DELIVERY
	    SET DEFUALT = 0
	    WHERE ID = #{id} 
	    <if test="address_id != null">
	        AND ADDRESS_ID != #{address_id}
	    </if>
	</update>
	
	<!-- 배송지 추가 -->
	<insert id="addDeliveryAddress" parameterType="com.vita.pay.domain.DeliveryVo">
	    INSERT INTO DELIVERY (
	        ADDRESS_ID, ID, NAME, RECIPENT, TEL, ZIPCODE, ADDRESS, ADDRESSDETAIL, REQ, DEFUALT
	    ) VALUES (
	        (SELECT NVL(MAX(ADDRESS_ID), 0) + 1 FROM DELIVERY), 
	        #{id}, #{name}, #{recipent}, #{tel}, #{zipcode}, #{address}, #{addressdetail}, #{req}, #{defualt}
	    )
	</insert>
	
	<!-- 다른 배송지의 defualt 값을 0으로 설정 -->
	<update id="resetUpdateDefaultForOtherAddresses" parameterType="map">
	    UPDATE DELIVERY
	    SET DEFUALT = 0
	    WHERE ID = #{id} AND ADDRESS_ID != #{address_id}
	</update>
	
	<!-- 배송지 업데이트 -->
	<update id="updateDeliveryAddress" parameterType="com.vita.pay.domain.DeliveryVo">
	    UPDATE DELIVERY
	    SET NAME = #{name}, RECIPENT = #{recipent}, TEL = #{tel}, ZIPCODE = #{zipcode},
	        ADDRESS = #{address}, ADDRESSDETAIL = #{addressdetail}, REQ = #{req}, DEFUALT = #{defualt}
	    WHERE ADDRESS_ID = #{address_id}
	</update>
	
	<!-- 배송지 삭제 -->
	<delete id="deleteDeliveryAddress" parameterType="map">
	    DELETE FROM DELIVERY
	    WHERE ID = #{id} AND ADDRESS_ID = #{address_id}
	</delete>

</mapper>
